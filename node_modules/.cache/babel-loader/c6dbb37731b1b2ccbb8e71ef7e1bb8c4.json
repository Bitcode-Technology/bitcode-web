{"ast":null,"code":"import _defineProperty from\"/Users/pkkwilliam/Desktop/bitcode/bitcode-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/pkkwilliam/Desktop/bitcode/bitcode-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _possibleConstructorReturn from\"/Users/pkkwilliam/Desktop/bitcode/bitcode-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/pkkwilliam/Desktop/bitcode/bitcode-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/pkkwilliam/Desktop/bitcode/bitcode-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React,{Component}from\"react\";import{TRADITIONAL_CHINESE}from\"../common/language\";export var BitCodeWebContext=React.createContext();var BitCodeWebAppState=/*#__PURE__*/function(_Component){_inherits(BitCodeWebAppState,_Component);function BitCodeWebAppState(){var _getPrototypeOf2;var _this;_classCallCheck(this,BitCodeWebAppState);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(BitCodeWebAppState)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={language:{languageType:TRADITIONAL_CHINESE}};_this.AppStateWrapper=function(_ref){var children=_ref.children;var language=_this.state.language;return React.createElement(BitCodeWebContext.Provider,{value:{language:_objectSpread({},language)}},children);};_this.setLanguage=function(languageType){_this.setState({language:{languageType:languageType}});};return _this;}return BitCodeWebAppState;}(Component);export{BitCodeWebAppState as default};","map":{"version":3,"sources":["/Users/pkkwilliam/Desktop/bitcode/bitcode-web/src/appState/contextProvider.js"],"names":["React","Component","TRADITIONAL_CHINESE","BitCodeWebContext","createContext","BitCodeWebAppState","state","language","languageType","AppStateWrapper","children","setLanguage","setState"],"mappings":"olDAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,mBAAT,KAAoC,oBAApC,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAGH,KAAK,CAACI,aAAN,EAA1B,C,GAEcC,CAAAA,kB,+aACnBC,K,CAAQ,CACNC,QAAQ,CAAE,CACRC,YAAY,CAAEN,mBADN,CADJ,C,OAMRO,e,CAAkB,cAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,IAC1BH,CAAAA,QAD0B,CACb,MAAKD,KADQ,CAC1BC,QAD0B,CAElC,MACE,qBAAC,iBAAD,CAAmB,QAAnB,EACE,KAAK,CAAE,CACLA,QAAQ,kBACHA,QADG,CADH,CADT,EAOGG,QAPH,CADF,CAWD,C,OAEDC,W,CAAc,SAACH,YAAD,CAAkB,CAC9B,MAAKI,QAAL,CAAc,CACZL,QAAQ,CAAE,CACRC,YAAY,CAAZA,YADQ,CADE,CAAd,EAKD,C,2CA5B6CP,S,SAA3BI,kB","sourcesContent":["import React, { Component } from \"react\";\nimport { TRADITIONAL_CHINESE } from \"../common/language\";\n\nexport const BitCodeWebContext = React.createContext();\n\nexport default class BitCodeWebAppState extends Component {\n  state = {\n    language: {\n      languageType: TRADITIONAL_CHINESE,\n    },\n  };\n\n  AppStateWrapper = ({ children }) => {\n    const { language } = this.state;\n    return (\n      <BitCodeWebContext.Provider\n        value={{\n          language: {\n            ...language,\n          },\n        }}\n      >\n        {children}\n      </BitCodeWebContext.Provider>\n    );\n  };\n\n  setLanguage = (languageType) => {\n    this.setState({\n      language: {\n        languageType,\n      },\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}