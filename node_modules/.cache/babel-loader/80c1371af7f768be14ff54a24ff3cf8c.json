{"ast":null,"code":"import React, { Component } from \"react\";\nimport { BitCodeWebContext } from \"../appState/contextProvider\";\nimport { TRADITIONAL_CHINESE } from \"./language\";\nconst english_label = React.lazy(() => import(\"../label/english_label.json\"));\nconst traditional_chinese_label = React.lazy(() => import(\"../label/traditional_chinese_label.json\"));\n\nclass ApplicationComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this._storage = new Storage();\n  }\n\n  get appState() {\n    return this.context;\n  }\n\n  get storage() {\n    return this._storage;\n  }\n\n  get label() {\n    const languageType = this.appState.language.languageType;\n\n    switch (languageType) {\n      case traditional_chinese_label:\n        return;\n\n      default:\n        return;\n    }\n  }\n\n}\n\nApplicationComponent.contextType = BitCodeWebContext;\nexport default ApplicationComponent;","map":{"version":3,"sources":["/Users/pkkwilliam/Desktop/bitcode/bitcode-web/src/common/applicationComponent.js"],"names":["React","Component","BitCodeWebContext","TRADITIONAL_CHINESE","english_label","lazy","traditional_chinese_label","ApplicationComponent","_storage","Storage","appState","context","storage","label","languageType","language","contextType"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,mBAAT,QAAoC,YAApC;AAEA,MAAMC,aAAa,GAAGJ,KAAK,CAACK,IAAN,CAAW,MAAM,OAAO,6BAAP,CAAjB,CAAtB;AACA,MAAMC,yBAAyB,GAAGN,KAAK,CAACK,IAAN,CAAW,MAC3C,OAAO,yCAAP,CADgC,CAAlC;;AAIA,MAAME,oBAAN,SAAmCN,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAE3CO,QAF2C,GAEhC,IAAIC,OAAJ,EAFgC;AAAA;;AAI3C,MAAIC,QAAJ,GAAe;AACb,WAAO,KAAKC,OAAZ;AACD;;AAED,MAAIC,OAAJ,GAAc;AACZ,WAAO,KAAKJ,QAAZ;AACD;;AAED,MAAIK,KAAJ,GAAY;AAAA,UACFC,YADE,GACe,KAAKJ,QAAL,CAAcK,QAD7B,CACFD,YADE;;AAEV,YAAQA,YAAR;AACE,WAAKR,yBAAL;AACE;;AACF;AACE;AAJJ;AAMD;;AApB0C;;AAAvCC,oB,CACGS,W,GAAcd,iB;AAsBvB,eAAeK,oBAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { BitCodeWebContext } from \"../appState/contextProvider\";\nimport { TRADITIONAL_CHINESE } from \"./language\";\n\nconst english_label = React.lazy(() => import(\"../label/english_label.json\"));\nconst traditional_chinese_label = React.lazy(() =>\n  import(\"../label/traditional_chinese_label.json\")\n);\n\nclass ApplicationComponent extends Component {\n  static contextType = BitCodeWebContext;\n  _storage = new Storage();\n\n  get appState() {\n    return this.context;\n  }\n\n  get storage() {\n    return this._storage;\n  }\n\n  get label() {\n    const { languageType } = this.appState.language;\n    switch (languageType) {\n      case traditional_chinese_label:\n        return;\n      default:\n        return;\n    }\n  }\n}\n\nexport default ApplicationComponent;\n"]},"metadata":{},"sourceType":"module"}